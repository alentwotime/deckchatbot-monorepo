services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - decknet

  backend:
    build:
      context: ./backend/backend-ai
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - AI_SERVICE_URL=http://ai-service:8000
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      ai-service:
        condition: service_healthy
    entrypoint: /entrypoint.sh
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 5
    networks:
      - decknet

  ai-service:
    build:
      context: .
      dockerfile: backend/backend-ai/ai_service/Dockerfile
    ports:
      - "8001:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - decknet

networks:
  decknet:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.65.0/24
