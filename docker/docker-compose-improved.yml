services:
  ai-service:
    build:
      context: ..
      dockerfile: ./apps/ai-service/Dockerfile
    env_file:
      - ../.env
    environment:
      - HF_API_TOKEN=${HF_API_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ADMIN_API_KEY=${OPENAI_ADMIN_API_KEY}
    ports:
      - "8001:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Increased start period
    networks:
      - decknet
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 512M  # Reduced reservation
          cpus: '0.5'   # Reduced reservation

  backend:
    build:
      context: ..
      dockerfile: ./apps/backend/Dockerfile
    env_file:
      - ../.env
    environment:
      - AI_SERVICE_URL=http://ai-service:8000
      - AI_PROVIDER=${AI_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ADMIN_API_KEY=${OPENAI_ADMIN_API_KEY}
      - OLLAMA_MODEL_NAME=${OLLAMA_MODEL_NAME:-llava-deckbot}
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      ai-service:
        condition: service_healthy
    entrypoint: /app/entrypoint.sh
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      start_period: 60s  # Increased start period
      retries: 3
    networks:
      - decknet
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M  # Reduced reservation
          cpus: '0.25'  # Reduced reservation

  frontend:
    build:
      context: ..
      dockerfile: ./apps/frontend/Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s  # Increased interval
      timeout: 10s   # Increased timeout
      retries: 3
      start_period: 30s
    networks:
      - decknet
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M   # Reduced reservation
          cpus: '0.1'   # Reduced reservation

networks:
  decknet:
    driver: bridge
    # Removed custom subnet configuration that was causing issues
    driver_opts:
      com.docker.network.bridge.name: decknet
      com.docker.network.driver.mtu: 1500
