services:
  frontend:
    build:
      context: ..
      dockerfile: ./apps/frontend/Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3
    dns:
      - 8.8.8.8
      - 1.1.1.1
    networks:
      - decknet
    # Security and resource optimizations
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx:noexec,nosuid,size=100m
      - /var/run:noexec,nosuid,size=100m
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  backend:
    build:
      context: ..
      dockerfile: ./apps/backend/Dockerfile
    env_file:
      - ../.env
    environment:
      - AI_SERVICE_URL=http://ai-service:8000
      - AI_PROVIDER=${AI_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OLLAMA_MODEL_NAME=${OLLAMA_MODEL_NAME:-llava-deckbot}
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      ai-service:
        condition: service_healthy
    entrypoint: /app/entrypoint.sh
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 5
    dns:
      - 8.8.8.8
      - 1.1.1.1
    networks:
      - decknet
    # Security and resource optimizations
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  ai-service:
    build:
      context: ..
      dockerfile: ./apps/ai-service/Dockerfile
    ports:
      - "8001:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    dns:
      - 8.8.8.8
      - 1.1.1.1
    networks:
      - decknet
    # Security and resource optimizations
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'

networks:
  decknet:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.65.0/24
